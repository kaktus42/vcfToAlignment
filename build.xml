<?xml version="1.0" encoding="UTF-8"?>
<project name="playAnt" default="all">

    <property name="version" value="1.2"/>

    <property name="lib.dir.name" value="lib" />
    <property name="lib.dir" value="${basedir}/lib" />
    <property name="src.dir" value="${basedir}/src" />
    <property name="test.dir" value="${basedir}/test" />
    <property name="classes.dir" value="${basedir}/out" />
    <property name="dist.dir" value="${basedir}/dist" />
    <property name="report.dir" value="${basedir}/testReport" />

    <path id="src.path">
        <pathelement path="${src.dir}"/>
    </path>

    <path id="project.classpath">
        <pathelement path="${classes.dir}"/>
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="clean">
        <delete dir="${report.dir}"/>
        <delete dir="${classes.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>

    <target name="compile" depends="clean">
        <mkdir dir="${classes.dir}"/>
        <javac destdir="${classes.dir}">
            <src path="${src.dir}"/>
            <classpath refid="project.classpath"/>
        </javac>
    </target>

    <target name="compileUnitTests" depends="compile">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${test.dir}" destdir="${classes.dir}" includeantruntime="false">
            <classpath refid="project.classpath"/>
        </javac>
    </target>

    <target name="runUnitTests" depends="compileUnitTests">
        <mkdir dir="${report.dir}"/>
        <junit printsummary="yes" haltonfailure="yes">
            <jvmarg value="-Dfile.encoding=UTF-8"/>
            <classpath refid="project.classpath"/>

            <formatter type="xml"/>

            <batchtest fork="yes" todir="${report.dir}">
                <fileset dir="${classes.dir}">
                    <include name="**/*Test*.class"/>
                    <exclude name="**/*$*.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="jar" depends="load.libs, compile">
        <unzip dest="${dist.dir}/build">
            <fileset dir="${lib.dir}">
                <include name="*.jar" />
                <exclude name="*junit*.jar" />
                <exclude name="*hamcrest*.jar" />
            </fileset>
        </unzip>
        <jar destfile="${dist.dir}/vcfToAlignment.jar">
            <fileset dir="${classes.dir}"/>
            <fileset dir="${dist.dir}/build"/>
            <manifest>
                <attribute name="Main-Class" value="de.kaktus42.Main"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
        </jar>
        <echo file="${dist.dir}/vcfToAlignment.sh">#!/bin/sh
prefix=$$(dirname $$(readlink $$0 || echo $$0))
exec java -Xmx1g -jar "$$prefix"/vcfToAlignment.jar "$$@"</echo>
        <chmod file="${dist.dir}/vcfToAlignment.sh" perm="ugo+rx"/>
        <delete dir="${dist.dir}/build" />
    </target>

    <target name="load.libs" description="Load libraries">
        <mkdir dir="${lib.dir}"/>
        <get src="http://central.maven.org/maven2/com/github/samtools/htsjdk/1.138/htsjdk-1.138.jar"
             dest="${lib.dir}/htsjdk-1.138.jar" usetimestamp="true"/>
        <get src="http://central.maven.org/maven2/junit/junit/4.12/junit-4.12.jar"
             dest="${lib.dir}/junit-4.12.jar" usetimestamp="true"/>
        <get src="http://central.maven.org/maven2/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar"
             dest="${lib.dir}/hamcrest-all-1.3.jar" usetimestamp="true"/>
    </target>

    <target name="all" depends="load.libs, runUnitTests" description="build all"/>
    <target name="test" depends="load.libs, runUnitTests" description="build all"/>
</project>